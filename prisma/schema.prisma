// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum AccessLevel {
  USER
  ADMIN
}

enum Role {
  DISALLOW
  ALLOW
}

model User {
  uuid        String      @id @default(uuid())
  name        String
  email       String      @unique
  password    String
  studentId   String      @unique @map("student_id")
  phoneNumber String      @unique @map("phone_number") @db.VarChar(11)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  accessLevel AccessLevel @default(USER)

  clients Client[]  @relation("ClientToUser")
  consent Consent[]

  @@map("user_tb")
}

model Client {
  uuid      String   @id @default(uuid())
  id        String   @unique
  password  String
  name      String
  urls      String[] 
  role      Role     @default(DISALLOW)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  member  User[]    @relation("ClientToUser")
  consent Consent[]

  @@map("client_tb")
}

model RefreshToken {
  token     String   @id
  scopes    String[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  clientUuid String
  userUuid   String
  consent    Consent @relation(fields: [clientUuid, userUuid], references: [clientUuid, userUuid])
}

model Consent {
  clientUuid String
  userUuid   String
  scopes     String[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  client       Client         @relation(fields: [clientUuid], references: [uuid])
  user         User           @relation(fields: [userUuid], references: [uuid])
  refreshToken RefreshToken[]

  @@id([clientUuid, userUuid])
  @@map("consent_tb")
}
